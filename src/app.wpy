<style lang="less">
page{
  height: 100%;
  background-color: #f5f5f5;
}
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
.myContainer{
  background-color: #f5f5f5;
  font-family: PingFangSC-Light,helvetica,'Heiti SC';
}
// 首页轮播
.my_container image,.my_container swiper{
    width: 100%;
    height: 346rpx;
}
.my_container swiper,.my_container navigator{
  border-radius: 16rpx;
  overflow: hidden;
  font-size: 0;
}
.my_container2 image,.my_container2 swiper{
    width: 100%;
    height: 569rpx;
}
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

import { setStore } from 'wepy-redux'
import configStore from './store'

const store = configStore()
setStore(store)

export default class extends wepy.app {
  config = {
    pages: [
      'pages/authorize',
      'pages/myindex',
      'pages/myAuction',
      'pages/myPage',
      'pages/index',
      'pages/myNews',
      'pages/addressMassege',
      'pages/addressDetail',
      'pages/orderDetail',
      'pages/allOrders',
      'pages/myComment',
      'pages/productDetail',
      'pages/confirmOrder',
      'pages/proSearch',
      'pages/logistics'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#d91f54',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: '#fff'
    },
    "tabBar": {
      "color": "#999",
      "selectedColor": "#d91f54",
      "list": [{
        "pagePath": "pages/myindex",
        "text": "首页",
        "iconPath": "./assets/images/index2@2x.png",
        "selectedIconPath": "./assets/images/index@2x.png"
      },
      {
        "pagePath": "pages/myAuction",
        "text": "我的竞拍",
        "iconPath": "./assets/images/wdjp@2x.png",
        "selectedIconPath": "./assets/images/wdjp2@2x.png"
      }, {
        "pagePath": "pages/myPage",
        "text": "个人中心",
        "iconPath": "./assets/images/us2@2x.png",
        "selectedIconPath": "./assets/images/us@2x.png"
      }]
    }
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    super()
    this.use('requestfix')
    this.use('promisify');
  }

  onLaunch() {
    // this.testAsync();
  }
  async onLoad(){
    wepy.setTabBarBadge({
      index: 1,
      text: '3'
    })
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
